export default [
    { "name": "@json_output_data_end", "doc": "**Name**\n\nmacro::json_output_data_end — \n     End the json output.\n\n**Synopsis**\n\n```\n    @json_output_data_end()\n\n```\n\n**Arguments**\n\nNone\n\n**Description**\n\nThe json_output_data_end macro is designed to be\n   called from the 'json_data' probe from the user's script. It marks\n   the end of the JSON output.\n\n" },
    { "name": "@json_output_array_string_value", "doc": "**Name**\n\nmacro::json_output_array_string_value — \n     Output a string value for metric in an array.\n\n**Synopsis**\n\n```\n    @json_output_array_string_value(array_name,array_index,metric_name,value)\n\n```\n\n**Arguments**\n\n`array_name`The name of the array.\n\n`array_index`The array index (as a string) indicating where to store the string value.\n\n`metric_name`The name of the string metric.\n\n`value`The string value to output.\n\n\n\n**Description**\n\nThe json_output_array_string_value macro is designed\n   to be called from the 'json_data' probe in the user's script to\n   output a metric's string value that is in an array. This metric\n   should have been added with json_add_array_string_metric.\n\n" },
    { "name": "@json_output_data_start", "doc": "**Name**\n\nmacro::json_output_data_start — \n  Start the json output.\n\n**Synopsis**\n\n```\n    @json_output_data_start()\n\n```\n\n**Arguments**\n\nNone\n\n**Description**\n\nThe json_output_data_start macro is designed to be\n   called from the 'json_data' probe from the user's script. It marks\n   the start of the JSON output.\n\n" },
    { "name": "@json_output_string_value", "doc": "**Name**\n\nmacro::json_output_string_value — \n     Output a string value.\n\n**Synopsis**\n\n```\n    @json_output_string_value(name,value)\n\n```\n\n**Arguments**\n\n`name`The name of the string metric.\n\n`value`The string value to output.\n\n\n\n**Description**\n\nThe json_output_string_value macro is designed to be\n   called from the 'json_data' probe in the user's script to output a\n   metric's string value. This metric should have been added with\n   json_add_string_metric.\n\n" },
    { "name": "@json_output_numeric_value", "doc": "**Name**\n\nmacro::json_output_numeric_value — \n     Output a numeric value.\n\n**Synopsis**\n\n```\n    @json_output_numeric_value(name,value)\n\n```\n\n**Arguments**\n\n`name`The name of the numeric metric.\n\n`value`The numeric value to output.\n\n\n\n**Description**\n\nThe json_output_numeric_value macro is designed to be\n   called from the 'json_data' probe in the user's script to output a\n   metric's numeric value. This metric should have been added with\n   json_add_numeric_metric.\n\n" },
    { "name": "@json_output_array_numeric_value", "doc": "**Name**\n\nmacro::json_output_array_numeric_value — \n     Output a numeric value for metric in an array.\n\n**Synopsis**\n\n```\n    @json_output_array_numeric_value(array_name,array_index,metric_name,value)\n\n```\n\n**Arguments**\n\n`array_name`The name of the array.\n\n`array_index`The array index (as a string) indicating where to store the numeric value.\n\n`metric_name`The name of the numeric metric.\n\n`value`The numeric value to output.\n\n\n\n**Description**\n\nThe json_output_array_numeric_value macro is designed\n   to be called from the 'json_data' probe in the user's script to\n   output a metric's numeric value that is in an array. This metric\n   should have been added with json_add_array_numeric_metric.\n\n" },
    { "name": "@count", "doc": "This statement returns the number of samples accumulated in aggregate s." },
    { "name": "@sum", "doc": "This statement returns the total sum of all samples in aggregate s." },
    { "name": "@min", "doc": "This statement returns the minimum of all samples in aggregate s." },
    { "name": "@max", "doc": "This statement returns the maximum of all samples in aggregate s." },
    { "name": "@avg", "doc": "This statement returns the average value of all samples in aggregate s." },
    { "name": "@hist_linear", "doc": "The statement @hist_linear(v,L,H,W) represents a linear histogram of aggregate v, where L and H represent the lower and upper end of a range of values and W represents the width (or size) of each bucket within the range. The low and high values can be negative, but the overall difference (high minus low) must be positive. The width parameter must also be positive.\n\nIn the output, a range of consecutive empty buckets may be replaced with a tilde (~) character. This can be controlled on the command line with -DHIST_ELISION=< num> , where < num> specifies how many empty buckets at the top and bottom of the range to print. The default is 2. A < num> of 0 removes all empty buckets. A negative < num> disables removal.\n\nFor example, if you specify -DHIST_ELISION=3 and the histogram has 10 consecutive empty buckets, the first 3 and last 3 empty buckets will be printed and the middle 4 empty buckets will be represented by a tilde (~)." },
    { "name": "@hist_log", "doc": "The statement @hist_log(v) represents a base-2 logarithmic histogram. Empty buckets are replaced with a tilde (~) character in the same way as @hist_linear() (see above)." },
    { "name": "@define" },
    { "name": "@defined" },
];
